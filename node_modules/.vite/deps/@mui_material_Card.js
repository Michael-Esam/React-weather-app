import { __toESM } from "./chunk-B4p5S3KX.js";
import { require_react } from "./react-BVgyl1g_.js";
import { require_jsx_runtime } from "./jsx-runtime-DnVEUh9I.js";
import { alpha, clsx_default, composeClasses, generateUtilityClass, getOverlayAlpha, require_prop_types, styled_default } from "./styled-CAStyx-G.js";
import "./zero-styled-ciFC5cIm.js";
import { generateUtilityClasses, useDefaultProps } from "./DefaultPropsProvider-Ccvu8z3U.js";
import { useTheme } from "./useTheme-D_J_ZIaQ.js";
import { memoTheme_default } from "./memoTheme-9ML3ohIF.js";
import { chainPropTypes } from "./chainPropTypes-DK9AxJTJ.js";

//#region node_modules/@mui/utils/esm/integerPropType/integerPropType.js
function getTypeByValue(value) {
	const valueType = typeof value;
	switch (valueType) {
		case "number":
			if (Number.isNaN(value)) return "NaN";
			if (!Number.isFinite(value)) return "Infinity";
			if (value !== Math.floor(value)) return "float";
			return "number";
		case "object":
			if (value === null) return "null";
			return value.constructor.name;
		default: return valueType;
	}
}
function requiredInteger(props, propName, componentName, location) {
	const propValue = props[propName];
	if (propValue == null || !Number.isInteger(propValue)) {
		const propType = getTypeByValue(propValue);
		return /* @__PURE__ */ new RangeError(`Invalid ${location} \`${propName}\` of type \`${propType}\` supplied to \`${componentName}\`, expected \`integer\`.`);
	}
	return null;
}
function validator(props, propName, componentName, location) {
	if (props[propName] === void 0) return null;
	return requiredInteger(props, propName, componentName, location);
}
function validatorNoop() {
	return null;
}
validator.isRequired = requiredInteger;
validatorNoop.isRequired = validatorNoop;
var integerPropType = validator;
var integerPropType_default = integerPropType;

//#endregion
//#region node_modules/@mui/material/esm/Paper/paperClasses.js
function getPaperUtilityClass(slot) {
	return generateUtilityClass("MuiPaper", slot);
}
var paperClasses = generateUtilityClasses("MuiPaper", [
	"root",
	"rounded",
	"outlined",
	"elevation",
	"elevation0",
	"elevation1",
	"elevation2",
	"elevation3",
	"elevation4",
	"elevation5",
	"elevation6",
	"elevation7",
	"elevation8",
	"elevation9",
	"elevation10",
	"elevation11",
	"elevation12",
	"elevation13",
	"elevation14",
	"elevation15",
	"elevation16",
	"elevation17",
	"elevation18",
	"elevation19",
	"elevation20",
	"elevation21",
	"elevation22",
	"elevation23",
	"elevation24"
]);

//#endregion
//#region node_modules/@mui/material/esm/Paper/Paper.js
var import_react = /* @__PURE__ */ __toESM(require_react(), 1);
var import_prop_types$1 = /* @__PURE__ */ __toESM(require_prop_types(), 1);
var import_jsx_runtime = /* @__PURE__ */ __toESM(require_jsx_runtime(), 1);
var useUtilityClasses$1 = (ownerState) => {
	const { square, elevation, variant, classes } = ownerState;
	const slots = { root: [
		"root",
		variant,
		!square && "rounded",
		variant === "elevation" && `elevation${elevation}`
	] };
	return composeClasses(slots, getPaperUtilityClass, classes);
};
var PaperRoot = styled_default("div", {
	name: "MuiPaper",
	slot: "Root",
	overridesResolver: (props, styles) => {
		const { ownerState } = props;
		return [
			styles.root,
			styles[ownerState.variant],
			!ownerState.square && styles.rounded,
			ownerState.variant === "elevation" && styles[`elevation${ownerState.elevation}`]
		];
	}
})(memoTheme_default(({ theme }) => ({
	backgroundColor: (theme.vars || theme).palette.background.paper,
	color: (theme.vars || theme).palette.text.primary,
	transition: theme.transitions.create("box-shadow"),
	variants: [
		{
			props: ({ ownerState }) => !ownerState.square,
			style: { borderRadius: theme.shape.borderRadius }
		},
		{
			props: { variant: "outlined" },
			style: { border: `1px solid ${(theme.vars || theme).palette.divider}` }
		},
		{
			props: { variant: "elevation" },
			style: {
				boxShadow: "var(--Paper-shadow)",
				backgroundImage: "var(--Paper-overlay)"
			}
		}
	]
})));
var Paper = /* @__PURE__ */ import_react.forwardRef(function Paper$1(inProps, ref) {
	const props = useDefaultProps({
		props: inProps,
		name: "MuiPaper"
	});
	const theme = useTheme();
	const { className, component = "div", elevation = 1, square = false, variant = "elevation",...other } = props;
	const ownerState = {
		...props,
		component,
		elevation,
		square,
		variant
	};
	const classes = useUtilityClasses$1(ownerState);
	if (theme.shadows[elevation] === void 0) console.error([`MUI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \`theme.shadows[${elevation}]\` is defined.`].join("\n"));
	return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(PaperRoot, {
		as: component,
		ownerState,
		className: clsx_default(classes.root, className),
		ref,
		...other,
		style: {
			...variant === "elevation" && {
				"--Paper-shadow": (theme.vars || theme).shadows[elevation],
				...theme.vars && { "--Paper-overlay": theme.vars.overlays?.[elevation] },
				...!theme.vars && theme.palette.mode === "dark" && { "--Paper-overlay": `linear-gradient(${alpha("#fff", getOverlayAlpha(elevation))}, ${alpha("#fff", getOverlayAlpha(elevation))})` }
			},
			...other.style
		}
	});
});
Paper.propTypes = {
	children: import_prop_types$1.default.node,
	classes: import_prop_types$1.default.object,
	className: import_prop_types$1.default.string,
	component: import_prop_types$1.default.elementType,
	elevation: chainPropTypes(integerPropType_default, (props) => {
		const { elevation, variant } = props;
		if (elevation > 0 && variant === "outlined") return /* @__PURE__ */ new Error(`MUI: Combining \`elevation={${elevation}}\` with \`variant="${variant}"\` has no effect. Either use \`elevation={0}\` or use a different \`variant\`.`);
		return null;
	}),
	square: import_prop_types$1.default.bool,
	style: import_prop_types$1.default.object,
	sx: import_prop_types$1.default.oneOfType([
		import_prop_types$1.default.arrayOf(import_prop_types$1.default.oneOfType([
			import_prop_types$1.default.func,
			import_prop_types$1.default.object,
			import_prop_types$1.default.bool
		])),
		import_prop_types$1.default.func,
		import_prop_types$1.default.object
	]),
	variant: import_prop_types$1.default.oneOfType([import_prop_types$1.default.oneOf(["elevation", "outlined"]), import_prop_types$1.default.string])
};
var Paper_default = Paper;

//#endregion
//#region node_modules/@mui/material/esm/Card/cardClasses.js
function getCardUtilityClass(slot) {
	return generateUtilityClass("MuiCard", slot);
}
var cardClasses = generateUtilityClasses("MuiCard", ["root"]);
var cardClasses_default = cardClasses;

//#endregion
//#region node_modules/@mui/material/esm/Card/Card.js
var import_prop_types = /* @__PURE__ */ __toESM(require_prop_types(), 1);
var useUtilityClasses = (ownerState) => {
	const { classes } = ownerState;
	return composeClasses({ root: ["root"] }, getCardUtilityClass, classes);
};
var CardRoot = styled_default(Paper_default, {
	name: "MuiCard",
	slot: "Root"
})({ overflow: "hidden" });
var Card = /* @__PURE__ */ import_react.forwardRef(function Card$1(inProps, ref) {
	const props = useDefaultProps({
		props: inProps,
		name: "MuiCard"
	});
	const { className, raised = false,...other } = props;
	const ownerState = {
		...props,
		raised
	};
	const classes = useUtilityClasses(ownerState);
	return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(CardRoot, {
		className: clsx_default(classes.root, className),
		elevation: raised ? 8 : void 0,
		ref,
		ownerState,
		...other
	});
});
Card.propTypes = {
	children: import_prop_types.default.node,
	classes: import_prop_types.default.object,
	className: import_prop_types.default.string,
	raised: chainPropTypes(import_prop_types.default.bool, (props) => {
		if (props.raised && props.variant === "outlined") return /* @__PURE__ */ new Error("MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.");
		return null;
	}),
	sx: import_prop_types.default.oneOfType([
		import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([
			import_prop_types.default.func,
			import_prop_types.default.object,
			import_prop_types.default.bool
		])),
		import_prop_types.default.func,
		import_prop_types.default.object
	])
};
var Card_default = Card;

//#endregion
export { cardClasses_default as cardClasses, Card_default as default, getCardUtilityClass };
//# sourceMappingURL=@mui_material_Card.js.map