{"version":3,"file":"@mui_material_Container.js","names":["styled","capitalize","PropTypes"],"sources":["../../@mui/material/esm/Container/Container.js","../../@mui/material/esm/Container/containerClasses.js"],"sourcesContent":["'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;"],"mappings":";;;;;;;;;AAOA,IAAM,YAAY,gBAAgB;CAChC,uBAAuBA,eAAO,OAAO;EACnC,MAAM;EACN,MAAM;EACN,oBAAoB,OAAO,WAAW;GACpC,MAAM,EACJ,eACE;AACJ,UAAO;IAAC,OAAO;IAAM,OAAO,WAAWC,mBAAW,OAAO,WAAW,SAAS,CAAC;IAAK,WAAW,SAAS,OAAO;IAAO,WAAW,kBAAkB,OAAO;IAAe;;EAE3K,CAAC;CACF,gBAAe,YAAW,gBAAgB;EACxC,OAAO;EACP,MAAM;EACP,CAAC;CACH,CAAC;AACsC,UAAU,YAAmC;CAQnF,UAAUC,0BAAU;CAIpB,SAASA,0BAAU;CAKnB,WAAWA,0BAAU;CAKrB,gBAAgBA,0BAAU;CAQ1B,OAAOA,0BAAU;CAOjB,UAAUA,0BAAgD,UAAU,CAACA,0BAAU,MAAM;EAAC;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM,CAAC,EAAEA,0BAAU,OAAO,CAAC;CAI/I,IAAIA,0BAAU,UAAU;EAACA,0BAAU,QAAQA,0BAAU,UAAU;GAACA,0BAAU;GAAMA,0BAAU;GAAQA,0BAAU;GAAK,CAAC,CAAC;EAAEA,0BAAU;EAAMA,0BAAU;EAAO,CAAC;CACxJ;AACD,wBAAe;;;;AChEf,SAAgB,yBAAyB,MAAM;AAC7C,QAAO,qBAAqB,gBAAgB,KAAK;;AAEnD,IAAM,mBAAmB,uBAAuB,gBAAgB;CAAC;CAAQ;CAAkB;CAAS;CAAc;CAAc;CAAc;CAAc;CAAa,CAAC;AAC1K,+BAAe"}